[user]
	email = 
	name = 

[alias]
	lg = log --graph --decorate --branches --oneline --remotes --tags --all --color
	ci = commit
	co = checkout
	cdiff = diff --cached
	subup = submodule update --init --recursive
	ff = fastforward
	yoink = cherry-pick
	unstage = reset HEAD
	authors = !git log --format='%aN' | sort | uniq -c | sort -nr
	committers = !git log --format='%cN' | sort | uniq -c | sort -nr
	whatis = rev-list --max-count 1
	rebase = rebase -p

	st = status -su
	sts = status -u
	tryagain = reset HEAD
	caco = "!git catchup $1; git co $1"
	fl = !git fetch -p && git lg
	flo = !git fetch -p && git lgone
	lgone = "!echo -en \"\\033[?7l\"; GIT_PAGER=\"head -$(expr $(tput lines) - 2)\" git lg --color; echo -e \"\\033[?7h\""
#	lgone = !"echo -en "\033[?7l"; git --no-pager lg --color -$(tput lines) | head -$(expr $(tput lines) - 2); echo -e "\033[?7h"
	fu = reset --hard
	cob = checkout --no-track -b
	paths = remote -v
	subf = !git submodule foreach "git fetch -p >/dev/null 2>&1; :" >/dev/null 2>&1
	subs = "!git submodule foreach \"clear; git lgone; bash || :;\"; clear; git sts; echo -e \"\\a\""
	tidy-branches = "!git co-rev HEAD -q; for b in $(git branch | grep -v \"*\"); do  git branch -D $b; done"
	detach = "!git co -q $(git rev-parse HEAD); echo \"You are now in 'detached HEAD' state. You were detatched from...\"; git --no-pager log --oneline --decorate -1"
	
[core]
	autocrlf = input
	editor = nano

[color]
	status = auto
	diff = auto
	interactive = auto
	branch = auto

[fetch]
	prune = true

[push]
	default = nothing

[receive]
	denyCurrentBranch = ignore
